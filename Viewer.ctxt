#BlueJ class context
comment0.target=Viewer
comment0.text=\r\n\ The\ class\ viewer\ create\ a\ GUI\ that\ allows\ the\ user\ to\ access\ a\ database\r\n\ in\ a\ interactive\ way\ through\ the\ use\ of\ buttons.\r\n\ \r\n\ @author\ Igor\ Lucas\ and\ Guilherme\ Matos.\r\n\ @version\ 0.8\r\n
comment1.params=
comment1.target=Viewer()
comment1.text=\r\n\ Create\ an\ Viewer\ with\ an\ instance\ of\ database\ and\ shows\ it\ on\ screen.\r\n
comment10.params=
comment10.target=void\ list()
comment10.text=\r\n\ Lists\ all\ itens\ in\ the\ database\ list\ in\ the\ output\ area.\r\n
comment11.params=
comment11.target=void\ addItem()
comment11.text=\r\n\ Adds\ a\ item\ to\ the\ database\ based\ on\ the\ informations\ in\ the\ input\ area,\r\n\ then\ informs\ if\ succesful\ or\ not.\r\n
comment12.params=
comment12.target=void\ importFile()
comment12.text=\r\n\ Adds\ items\ to\ the\ database\ based\ on\ a\ file\ imported\ to\ the\ application,\r\n\ then\ prints\ a\ message\ for\ each\ successful\ item,\ a\ message\ for\ each\r\n\ repeated\ item\ and\ a\ error\ message\ if\ the\ IO\ fails.\r\n
comment13.params=
comment13.target=void\ saveFile()
comment13.text=\r\n\ Saves\ a\ file\ containing\ the\ current\ list\ on\ the\ database,\ informing\ the\r\n\ date\ in\ which\ it\ was\ created,\ in\ a\ destination\ set\ by\ the\ user.\ Prints\r\n\ a\ error\ message\ if\ the\ IO\ is\ unsuccessful.\r\n
comment14.params=
comment14.target=void\ addComment()
comment14.text=\r\n\ Sets\ a\ comment\ into\ a\ item\ on\ the\ database,\ using\ the\ item's\ title\ to\r\n\ find\ it.\ Prints\ a\ message\ confirming\ success\ or\ informing\ if\ the\ item\r\n\ is\ not\ in\ the\ database.\r\n
comment15.params=
comment15.target=void\ removeItem()
comment15.text=\r\n\ Removes\ a\ item\ from\ the\ database,\ using\ it's\ name\ to\ find\ the\ item.\r\n\ Prints\ a\ message\ confirming\ success\ or\ informing\ if\ the\ item\ could\ not\r\n\ be\ found.\r\n
comment16.params=fields
comment16.target=void\ addMovie(java.lang.String[])
comment16.text=\r\n\ Adds\ a\ movie\ to\ the\ database.\r\n\ @params\ fields[]\ An\ array\ with\ the\ information\ to\ be\ added\ to\ the\ movie.\r\n
comment17.params=fields
comment17.target=void\ addTvSeries(java.lang.String[])
comment17.text=\r\n\ Adds\ a\ tv\ series\ to\ the\ database.\r\n\ @params\ fields[]\ An\ array\ with\ the\ information\ to\ be\ added\ to\ the\r\n\ tv\ series.\r\n
comment18.params=fields
comment18.target=void\ addAudioMedia(java.lang.String[])
comment18.text=\r\n\ Adds\ a\ audio\ media\ to\ the\ database.\r\n\ @params\ fields[]\ An\ array\ with\ the\ information\ to\ be\ added\ to\ the\r\n\ audio\ media.\r\n
comment19.params=fields\ titles
comment19.target=java.lang.Boolean\ verifyTitle(java.lang.String[],\ java.lang.StringBuilder)
comment19.text=\r\n\ Checks\ if\ a\ identical\ title\ already\ exists\ in\ the\ database\r\n\ @params\ fields[]\ The\ information\ of\ the\ item\ trying\ to\ be\ added.\r\n\ @params\ titles\ A\ StringBuilder\ building\ the\ string\ of\ repeated\ itens\ to\r\n\ be\ printed\ in\ the\ output\ area.\r\n\ @return\ true\ if\ there\ is\ a\ repeated\ title.\r\n
comment2.params=
comment2.target=void\ makeFrame()
comment2.text=\r\n\ Create\ the\ Swing\ frame\ and\ its\ content.\r\n
comment3.params=
comment3.target=javax.swing.JPanel\ createPanel()
comment3.text=\r\n\ Create\ the\ panel\ used\ in\ content\ pane\ of\ the\ frame.\r\n\ @return\ the\ panel\ to\ be\ used.\r\n
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment7.params=e
comment7.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
numComments=20
